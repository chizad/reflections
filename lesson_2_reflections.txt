What happens when you initialize a repository? Why do you need to do it?

A hidden folder called .git is added to my folder. This makes my folder a git repository.


How is the staging area different from the working directory and the repository? What value do you think it offers?

The staging area contains files ready to commit from the working directory.
The working directory contains all your files you're working on.
The repo contains your commited changes.


How can you use the staging area to make sure you have one commit per logical change?

You can stage files to save progress and wait until you're ready to commit with a logical change.


What are some situations when branches would be helpful in keeping your history organized? How would branches help?

Branches allow you to test different ideas without messing up your “core” code.


How do the diagrams help you visualize the branch structure?

Diagrams show where code has split into different versions and what is accessible.


What is the result of merging two branches together? Why do we represent it in the diagram the way we do?

Merging two branches combines the changes made from the master in the branch. The diagram demonstrates commits that will and won't be a part of the new commit produced by the merge.


What are the pros and cons of Git’s automatic merging vs. always doing merges manually?

Pro: Merging is fast and takes all the changes from branches to merge into master. There's not a lot of effort or time needed to do this so it's convenient. Cons: When there are changes done to similar blocks of code from multiple people, you'll need to possibly discuss with the person to resolve which conflict should be implemented into the merged branch.

